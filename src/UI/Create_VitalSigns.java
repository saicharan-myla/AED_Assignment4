/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Code.Patient;
import Code.Patient_Directory;
import Code.Person;
import Code.Person_Directory;
import Code.VitalSigns;
import com.sun.xml.internal.ws.api.streaming.XMLStreamReaderFactory;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author saich
 */
public class Create_VitalSigns extends javax.swing.JPanel {

    /**
     * Creates new form Create_VitalSigns
     */
int x;
DefaultTableModel model;
Person_Directory P_d = new Person_Directory();
String alphaNumericRegex = "^[a-zA-Z0-9]*$";   
String alphaRegex = "^[a-zA-Z]*$";
boolean isfound;
int row1;
    public Create_VitalSigns(Person_Directory P_d) {
        initComponents();
       this.P_d = P_d;
    }
LocalDateTime now;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtxtTemp = new javax.swing.JTextField();
        jTxtdiaPressure = new javax.swing.JTextField();
        jTxtSpO2 = new javax.swing.JTextField();
        jBtnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jBtnEdit = new javax.swing.JButton();
        jBtnDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTxtPatient_Id = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabEncounter = new javax.swing.JTable();
        jTextField2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTexteditTemp = new javax.swing.JTextField();
        jTexteditPat_id = new javax.swing.JTextField();
        jTexteditSysPressure = new javax.swing.JTextField();
        jTexteditSpo2 = new javax.swing.JTextField();
        jTexteditDoc_REM = new javax.swing.JTextField();
        jTexteditDiaPress = new javax.swing.JTextField();
        jButtonUpdate = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(jtxtTemp, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 90, -1));

        jTxtdiaPressure.setText(" ");
        jTxtdiaPressure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtdiaPressureActionPerformed(evt);
            }
        });
        add(jTxtdiaPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, 120, -1));
        add(jTxtSpO2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 120, -1));

        jBtnSave.setText("Save");
        jBtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSaveActionPerformed(evt);
            }
        });
        add(jBtnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        jLabel1.setText("Temperature");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 113, -1, -1));

        jLabel2.setText("systolic_pressure");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 211, -1, -1));

        jLabel3.setText("Diastolic_pressure");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 210, -1, -1));

        jLabel4.setText("Blood Oxygen");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 113, -1, -1));

        jBtnEdit.setText("View");
        jBtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditActionPerformed(evt);
            }
        });
        add(jBtnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 480, 90, -1));

        jBtnDelete.setText("Delete");
        jBtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDeleteActionPerformed(evt);
            }
        });
        add(jBtnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 480, 90, -1));

        jLabel5.setFont(new java.awt.Font("Garamond", 1, 24)); // NOI18N
        jLabel5.setText("Add an Encounter");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, -1, -1));

        jLabel6.setText("Patient_Id:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, -1, -1));
        add(jTxtPatient_Id, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 90, -1));

        jLabel7.setText("Doctors_Remarks:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, 120, -1));

        jTabEncounter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Blood Oxygen", "Temperature", "Sys_Pressure", "Dia_Pressure", "id", "Date", "Encounter_id"
            }
        ));
        jScrollPane2.setViewportView(jTabEncounter);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, 600, 110));
        add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 110, -1));

        jLabel8.setText("Temp");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 570, -1, -1));

        jLabel9.setText("Pat_id");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 640, -1, -1));

        jLabel10.setText("Sys_Pressure");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 560, -1, -1));

        jLabel11.setText("Blood Oxy");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 560, -1, -1));

        jLabel12.setText("Date");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 620, -1, -1));

        jLabel13.setText("Dia_Pressure");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 630, -1, -1));

        jTexteditTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTexteditTempActionPerformed(evt);
            }
        });
        add(jTexteditTemp, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 570, 110, -1));

        jTexteditPat_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTexteditPat_idActionPerformed(evt);
            }
        });
        add(jTexteditPat_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 640, 110, -1));

        jTexteditSysPressure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTexteditSysPressureActionPerformed(evt);
            }
        });
        add(jTexteditSysPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 550, 90, -1));
        add(jTexteditSpo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 560, 90, -1));
        add(jTexteditDoc_REM, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 620, 110, -1));

        jTexteditDiaPress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTexteditDiaPressActionPerformed(evt);
            }
        });
        add(jTexteditDiaPress, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 620, 90, -1));

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 480, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jTxtdiaPressureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtdiaPressureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtdiaPressureActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jBtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSaveActionPerformed
        // TODO add your handling code here:

    String S_Pressure = jTextField2.getText();
        try {
            Integer.parseInt(S_Pressure);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, " Please type a valid S_Pressure ");
            return;
        }

String D_Pressure1 = jTxtdiaPressure.getText().trim();
        try {
            Integer.parseInt(D_Pressure1);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, " Please type a valid D_Pressure ");
            return;
        }



String TeMP = jtxtTemp.getText();
        try {
           Double.parseDouble(TeMP);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, " Please type a valid Temperature ");
            return;
        }

        

       String id = jTxtPatient_Id.getText();
        try {
            x = Integer.parseInt(id);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, " Please type a valid id ");
            return;
        }

String DOC = jTextField1.getText();
 if (DOC == null || DOC.equals("")|| !DOC.matches(alphaRegex) ) {
            JOptionPane.showMessageDialog(null, "Please enter a valid REMARK");
            return;
        }

        

String sPO2 = jTxtSpO2.getText();
        try {
            Integer.parseInt(sPO2);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, " Please type a valid SpO2 ");
            return;
}


System.out.println("I came here");

System.out.println("length" + Person_Directory.person_list.size());
 isfound = false;
for (Person p12 : Person_Directory.person_list){
    //   int c_id =  Integer.parseInt(id);
System.out.println("int c_id"+ x + "int p" + p12.getId());
if ( p12.getId() == x){
System.out.println("int c_id"+ x + "int p" + p12.getId());
System.out.println("I came here into the if late");
p12.setIsPatient(true);
isfound = true;


     VitalSigns vs1 = p12.Addnew();
    

         //  vs1 = p.getVs();
        //   ArrayList<VitalSigns> vsall ;
          // vsall = p.getVitalSigns_List();
 //vsall.add(vs1);
System.out.println("I came here added vs");
    vs1.setBlood_oxygen(Integer.parseInt(sPO2));
    vs1.setDiastolic_pressure(Integer.parseInt(D_Pressure1));
    vs1.setDoc_remarks(DOC);
    vs1.setTemperature(Double.parseDouble(TeMP));
    vs1.setSystolic_pressure(Integer.parseInt(S_Pressure));
    vs1.setId(Integer.parseInt(id));
    vs1.setEnc_id(VitalSigns.Encounters_id);
     now = LocalDateTime.now();
vs1.setEntry_time(now);
           //vsall.add(vs1);
}



    }

if (isfound == true){

  

 JOptionPane.showMessageDialog(this, " Encounter Details Saved");
populateTable();}
else{
JOptionPane.showMessageDialog(this, " Please add person first");
}

  jTextField1.setText("");
  jTextField2.setText("");
  jTxtPatient_Id.setText("");
  jTxtSpO2.setText("");
  jTxtdiaPressure.setText("");
  jtxtTemp.setText("");


    }//GEN-LAST:event_jBtnSaveActionPerformed

    private void jBtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDeleteActionPerformed



int selected_row = jTabEncounter.getSelectedRow();
if (selected_row<0){
JOptionPane.showMessageDialog(this, "Please select a row to delete");
return;

}
//DefaultTableModel 
model = (DefaultTableModel) jTabEncounter.getModel();
Person selectedVitals = (Person) model.getValueAt(selected_row, 0);
int id =  selectedVitals.getId();
for (Person p: P_d.person_list){

if (p.getId() == id){
System.out.println("i came into deletes if");
for(VitalSigns vs : p.getVitalSigns_List()){

 if ( vs.getEnc_id() == Integer.parseInt(jTabEncounter.getValueAt(selected_row,7).toString())){
System.out.println("i came into deletes if");
 p.getVitalSigns_List().remove(vs);
 break;
}






}


}

}
JOptionPane.showMessageDialog(this, "Values deleted");
populateTable();        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnDeleteActionPerformed

    private void jTexteditTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTexteditTempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTexteditTempActionPerformed

    private void jTexteditPat_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTexteditPat_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTexteditPat_idActionPerformed

    private void jTexteditDiaPressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTexteditDiaPressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTexteditDiaPressActionPerformed

    private void jBtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditActionPerformed
        // TODO add your handling code here:
       
 row1 = jTabEncounter.getSelectedRow();
int col1 =  jTabEncounter.getSelectedColumn();
    

 if (row1 >= 0){
    

    jTexteditDiaPress.setText(jTabEncounter.getValueAt(row1,4).toString());
    jTexteditPat_id.setText(jTabEncounter.getValueAt(row1,5 ).toString());
    jTexteditSpo2.setText(jTabEncounter.getValueAt(row1, 1).toString());
    jTexteditSysPressure.setText(jTabEncounter.getValueAt(row1, 3).toString());
    jTexteditTemp.setText(jTabEncounter.getValueAt(row1,2).toString());
    jTexteditDoc_REM.setText(model.getValueAt(row1, 6).toString());


   
   

   

}
else {
JOptionPane.showMessageDialog(this, "Please select a row");
   
}

/*jTexteditDiaPress.setText("");
jTexteditDoc_REM.setText("");
jTexteditPat_id.setText("");
jTexteditSpo2.setText("");
jTexteditSysPressure.setText("");
jTexteditTemp.setText("");*/

    }//GEN-LAST:event_jBtnEditActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
          row1 = jTabEncounter.getSelectedRow();
       double editTemp = Double.parseDouble(jTexteditTemp.getText());
       int editP_id = Integer.parseInt(jTexteditPat_id.getText());
       int editSpo2 = Integer.parseInt(jTexteditSpo2.getText());
       int editSys = Integer.parseInt(jTexteditSysPressure.getText());
       int editDiaP = Integer.parseInt(jTexteditDiaPress.getText());

      int editid = Integer.parseInt(jTabEncounter.getValueAt(row1, 5).toString());
      int vsid = Integer.parseInt(jTabEncounter.getValueAt(row1,7).toString());
   

for (Person p : Person_Directory.person_list){
System.out.println("p.getid"+ p.getId()+"another"+ "editid");
     if (p.getId() == editid){

    

for(VitalSigns vs : p.getVitalSigns_List()){
    
 if (vsid == vs.getEnc_id()){

System.out.println("here in vs list and found vsid "+ vsid + "  another" + vs.getEnc_id());
vs.setBlood_oxygen(editSpo2);
vs.setDiastolic_pressure(editDiaP);
vs.setSystolic_pressure(editSys);
vs.setTemperature(editTemp);
vs.setId(editP_id);

populateTablewithedits();
break;
}

 
}




}



}
     
  
 
JOptionPane.showMessageDialog(this, "Values updated");


jTexteditDiaPress.setText("");
jTexteditDoc_REM.setText("");
jTexteditPat_id.setText("");
jTexteditSpo2.setText("");
jTexteditSysPressure.setText("");
jTexteditTemp.setText("");

   
      

      
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jTexteditSysPressureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTexteditSysPressureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTexteditSysPressureActionPerformed





    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnDelete;
    private javax.swing.JButton jBtnEdit;
    private javax.swing.JButton jBtnSave;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTabEncounter;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTexteditDiaPress;
    private javax.swing.JTextField jTexteditDoc_REM;
    private javax.swing.JTextField jTexteditPat_id;
    private javax.swing.JTextField jTexteditSpo2;
    private javax.swing.JTextField jTexteditSysPressure;
    private javax.swing.JTextField jTexteditTemp;
    private javax.swing.JTextField jTxtPatient_Id;
    private javax.swing.JTextField jTxtSpO2;
    private javax.swing.JTextField jTxtdiaPressure;
    private javax.swing.JTextField jtxtTemp;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
         // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        //DefaultTableModel
 model = (DefaultTableModel)jTabEncounter.getModel();
        model.setRowCount(0);


for (Person p11: Person_Directory.person_list){
ArrayList <VitalSigns> vs1234 = p11.getVitalSigns_List();
  for(VitalSigns vs123 : vs1234){
int spo2 = vs123.getBlood_oxygen();
double temp = vs123.getTemperature();
int diasp = vs123.getDiastolic_pressure();
int sysp = vs123.getSystolic_pressure();
LocalDateTime t1 = vs123.getEntry_time();
int id_card = p11.getId();
Object [] row = new Object [8];
row [0] = p11;
row[1]= spo2;
row[2] = temp;
row[3] = sysp;
row[4] = diasp;
row[5]= id_card;
row[6] = t1;
row[7] = vs123.getEnc_id();
model.addRow(row);
}





}



    }

   /* private void checkpatientexists(int C_id) {
         // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody

for (Person p : P_d.getPerson_list()){
 int c_id = C_id;        
if ( p.getId() == c_id){
System.out.println("I came here into the if");
   VitalSigns vs1  = p.getVs().addVitalstoList();
 /*   vs1.setBlood_oxygen(Integer.parseInt(sPO2));
    vs1.setDiastolic_pressure(Integer.parseInt(D_Pressure1));
    vs1.setDoc_remarks(DOC);
    vs1.setTemperature(Double.parseDouble(TeMP));
    vs1.setSystolic_pressure(Integer.parseInt(S_Pressure));*/
//}

/*else {
// JOptionPane.showMessageDialog(this, " Please add person first");

}

    }*/

    private void populateTablewithedits() {
       // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody

   model.setRowCount(0);


for (Person p11: Person_Directory.person_list){
ArrayList <VitalSigns> vs1234 = p11.getVitalSigns_List();
  for(VitalSigns vs123 : vs1234){
int spo2 = vs123.getBlood_oxygen();
double temp = vs123.getTemperature();
int diasp = vs123.getDiastolic_pressure();
int sysp = vs123.getSystolic_pressure();
LocalDateTime t1 = vs123.getEntry_time();
int id_card = p11.getId();
Object [] row = new Object [8];
row [0] = p11;
row[1]= spo2;
row[2] = temp;
row[3] = sysp;
row[4] = diasp;
row[5]= id_card;
row[6] = t1;
row[7] = vs123.getEnc_id();
model.addRow(row);
}
       
    }









}
}

